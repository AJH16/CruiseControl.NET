<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NAnt.NUnit2Tasks</name>
    </assembly>
    <members>
        <member name="T:NAnt.NUnit2.Tasks.NUnit2Task">
            <summary>Runs tests using the NUnit V2.0 framework.</summary>
            <remarks>
              <para>See the <a href="http://nunit.sf.net">NUnit home page</a> for more information.</para>
              <para>The <c>haltonfailure</c> or <c>haltonerror</c> are only used to stop more than one test suite to stop running.  If any test suite fails a build error will be thrown.  Use <c>failonerror="false"</c> to ignore test errors and continue build.</para>
            </remarks>
            <example>
              <para>Run tests in the <c>MyProject.Tests.dll</c> assembly.</para>
              <code>
            <![CDATA[
            <nunit2>
                <test assemblyname="MyProject.Tests.dll"/>
            </nunit2>
            ]]>
              </code>
              <para>Run all tests in files listed in the <c>tests.txt</c> file.</para>
              <code>
            <![CDATA[
            <nunit2>
                <test>
                    <assemblies>
                        <includesList name="tests.txt" />
                    </assemblies>
                </test>
            </nunit2>
            ]]>
              </code>
            </example>
        </member>
        <member name="M:NAnt.NUnit2.Tasks.NUnit2Task.InitializeTask(System.Xml.XmlNode)">
            <summary>
            Initializes the task using the specified XML node.
            </summary>
            <param name="taskNode"><see cref="T:System.Xml.XmlNode"/> containing the XML fragment used to initialize this task instance.</param>
        </member>
        <member name="M:NAnt.NUnit2.Tasks.NUnit2Task.ExecuteTask">
            <summary>
            Runs the tests and sets up the formatters.
            </summary>
        </member>
        <member name="P:NAnt.NUnit2.Tasks.NUnit2Task.HaltOnFailure">
            <summary>
            Stop the build process if a test fails.
            </summary>
        </member>
        <member name="P:NAnt.NUnit2.Tasks.NUnit2Task.HaltOnError">
            <summary>
            Build fails on error.
            </summary>
        </member>
        <member name="P:NAnt.NUnit2.Tasks.NUnit2Task.Tests">
            <summary>
            Tests to run.
            </summary>
        </member>
        <member name="P:NAnt.NUnit2.Tasks.NUnit2Task.FormatterElements">
            <summary>
            Formatters to output results of unit tests 
            </summary>
        </member>
        <member name="T:NAnt.NUnit2.Tasks.NUnit2Task.LogWriter">
            <summary>
            Implements a <see cref="T:System.IO.TextWriter"/> for writing information to 
            the Nant logging infrastructure.
            </summary>
        </member>
        <member name="M:NAnt.NUnit2.Tasks.NUnit2Task.LogWriter.#ctor(NAnt.Core.Task,System.String,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.NUnit2.Tasks.NUnit2Task.LogWriter"/> class 
            with the specified prefix and format provider.
            </summary>
            <param name="task">Determines the indentation level.</param>
            <param name="logPrefix">The prefix for written messages.</param>
            <param name="formatProvider">An <see cref="T:System.IFormatProvider"/> object that controls formatting.</param>
        </member>
        <member name="M:NAnt.NUnit2.Tasks.NUnit2Task.LogWriter.Write(System.Char[])">
            <summary>
            Writes a character array to the text stream, while adding a 
            prefix if its the first output on the current line.
            </summary>
            <param name="chars">The character array to write to the text stream.</param>
        </member>
        <member name="M:NAnt.NUnit2.Tasks.NUnit2Task.LogWriter.WriteLine(System.String)">
            <summary>
            Writes a string followed by a line terminator to the text stream.
            </summary>
            <param name="value">The string to write. If <paramref name="value" /> is a null reference, only the line termination characters are written.</param>
        </member>
        <member name="M:NAnt.NUnit2.Tasks.NUnit2Task.LogWriter.WriteLine(System.String,System.Object[])">
            <summary>
            Writes out a formatted string with prefix and a new line, using the same 
            semantics as <see cref="M:System.String.Format(System.String,System.Object)"/>.
            </summary>
            <param name="line">The formatting string.</param>
            <param name="args">The object array to write into format string.</param>
        </member>
        <member name="P:NAnt.NUnit2.Tasks.NUnit2Task.LogWriter.Encoding">
            <summary>
            Gets the <see cref="P:NAnt.NUnit2.Tasks.NUnit2Task.LogWriter.Encoding"/> in which the output is written.
            </summary>
            <value>
            The <see cref="T:NAnt.NUnit2.Tasks.NUnit2Task.LogWriter"/> always writes output in UTF8 
            encoding.
            </value>
        </member>
        <member name="T:NAnt.NUnit2.Types.NUnit2Test">
            <summary>
            Represents a test element of an NUnit2 task.
            </summary>
        </member>
        <member name="P:NAnt.NUnit2.Types.NUnit2Test.AssemblyName">
            <summary>
            Name of the assembly to search for tests.
            </summary>
        </member>
        <member name="P:NAnt.NUnit2.Types.NUnit2Test.TestName">
            <summary>
            Name of a specific test to run. If not specified then all tests in 
            the assembly are run.
            </summary>
        </member>
        <member name="P:NAnt.NUnit2.Types.NUnit2Test.Assemblies">
            <summary>
            Assemblies to include in test.
            </summary>
        </member>
        <member name="P:NAnt.NUnit2.Types.NUnit2Test.HaltOnFailure">
            <summary>
            Build fails on failure.
            </summary>
        </member>
        <member name="P:NAnt.NUnit2.Types.NUnit2Test.TransformFile">
            <summary>
            XSLT transform file to use when using the Xml formatter.
            </summary>
        </member>
        <member name="P:NAnt.NUnit2.Types.NUnit2Test.AppConfigFile">
            <summary>
            The application configuration file to use for the NUnit test domain.
            </summary>
        </member>
        <member name="P:NAnt.NUnit2.Types.NUnit2Test.TestAssemblies">
            <summary>
            Gets all assemblies specified for these tests.
            </summary>
            <returns>
            All assemblies specified for these tests.
            </returns>
        </member>
        <member name="T:NAnt.NUnit2.Types.NUnit2TestCollection">
            <summary>
            Contains a strongly typed collection of <see cref="T:NAnt.NUnit2.Types.NUnit2Test"/> objects.
            </summary>
        </member>
        <member name="M:NAnt.NUnit2.Types.NUnit2TestCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.NUnit2.Types.NUnit2TestCollection"/> class.
            </summary>
        </member>
        <member name="M:NAnt.NUnit2.Types.NUnit2TestCollection.#ctor(NAnt.NUnit2.Types.NUnit2TestCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.NUnit2.Types.NUnit2TestCollection"/> class
            with the specified <see cref="T:NAnt.NUnit2.Types.NUnit2TestCollection"/> instance.
            </summary>
        </member>
        <member name="M:NAnt.NUnit2.Types.NUnit2TestCollection.#ctor(NAnt.NUnit2.Types.NUnit2Test[])">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.NUnit2.Types.NUnit2TestCollection"/> class
            with the specified array of <see cref="T:NAnt.NUnit2.Types.NUnit2Test"/> instances.
            </summary>
        </member>
        <member name="M:NAnt.NUnit2.Types.NUnit2TestCollection.Add(NAnt.NUnit2.Types.NUnit2Test)">
            <summary>
            Adds a <see cref="T:NAnt.NUnit2.Types.NUnit2Test"/> to the end of the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.NUnit2.Types.NUnit2Test"/> to be added to the end of the collection.</param> 
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:NAnt.NUnit2.Types.NUnit2TestCollection.AddRange(NAnt.NUnit2.Types.NUnit2Test[])">
            <summary>
            Adds the elements of a <see cref="T:NAnt.NUnit2.Types.NUnit2Test"/> array to the end of the collection.
            </summary>
            <param name="items">The array of <see cref="T:NAnt.NUnit2.Types.NUnit2Test"/> elements to be added to the end of the collection.</param> 
        </member>
        <member name="M:NAnt.NUnit2.Types.NUnit2TestCollection.AddRange(NAnt.NUnit2.Types.NUnit2TestCollection)">
            <summary>
            Adds the elements of a <see cref="T:NAnt.NUnit2.Types.NUnit2TestCollection"/> to the end of the collection.
            </summary>
            <param name="items">The <see cref="T:NAnt.NUnit2.Types.NUnit2TestCollection"/> to be added to the end of the collection.</param> 
        </member>
        <member name="M:NAnt.NUnit2.Types.NUnit2TestCollection.Contains(NAnt.NUnit2.Types.NUnit2Test)">
            <summary>
            Determines whether a <see cref="T:NAnt.NUnit2.Types.NUnit2Test"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.NUnit2.Types.NUnit2Test"/> to locate in the collection.</param> 
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the collection;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:NAnt.NUnit2.Types.NUnit2TestCollection.CopyTo(NAnt.NUnit2.Types.NUnit2Test[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.        
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param> 
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:NAnt.NUnit2.Types.NUnit2TestCollection.IndexOf(NAnt.NUnit2.Types.NUnit2Test)">
            <summary>
            Retrieves the index of a specified <see cref="T:NAnt.NUnit2.Types.NUnit2Test"/> object in the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.NUnit2.Types.NUnit2Test"/> object for which the index is returned.</param> 
            <returns>
            The index of the specified <see cref="T:NAnt.NUnit2.Types.NUnit2Test"/>. If the <see cref="T:NAnt.NUnit2.Types.NUnit2Test"/> is not currently a member of the collection, it returns -1.
            </returns>
        </member>
        <member name="M:NAnt.NUnit2.Types.NUnit2TestCollection.Insert(System.Int32,NAnt.NUnit2.Types.NUnit2Test)">
            <summary>
            Inserts a <see cref="T:NAnt.NUnit2.Types.NUnit2Test"/> into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The <see cref="T:NAnt.NUnit2.Types.NUnit2Test"/> to insert.</param>
        </member>
        <member name="M:NAnt.NUnit2.Types.NUnit2TestCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the collection.
            </summary>
            <returns>
            A <see cref="T:NAnt.NUnit2.Types.NUnit2TestEnumerator"/> for the entire collection.
            </returns>
        </member>
        <member name="M:NAnt.NUnit2.Types.NUnit2TestCollection.Remove(NAnt.NUnit2.Types.NUnit2Test)">
            <summary>
            Removes a member from the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.NUnit2.Types.NUnit2Test"/> to remove from the collection.</param>
        </member>
        <member name="P:NAnt.NUnit2.Types.NUnit2TestCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
        </member>
        <member name="T:NAnt.NUnit2.Types.NUnit2TestEnumerator">
            <summary>
            Enumerates the <see cref="T:NAnt.NUnit2.Types.NUnit2Test"/> elements of a <see cref="T:NAnt.NUnit2.Types.NUnit2TestCollection"/>.
            </summary>
        </member>
        <member name="M:NAnt.NUnit2.Types.NUnit2TestEnumerator.#ctor(NAnt.NUnit2.Types.NUnit2TestCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.NUnit2.Types.NUnit2TestEnumerator"/> class
            with the specified <see cref="T:NAnt.NUnit2.Types.NUnit2TestCollection"/>.
            </summary>
            <param name="arguments">The collection that should be enumerated.</param>
        </member>
        <member name="M:NAnt.NUnit2.Types.NUnit2TestEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            <c>true</c> if the enumerator was successfully advanced to the next element; 
            <c>false</c> if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="M:NAnt.NUnit2.Types.NUnit2TestEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the 
            first element in the collection.
            </summary>
        </member>
        <member name="P:NAnt.NUnit2.Types.NUnit2TestEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>
            The current element in the collection.
            </returns>
        </member>
        <member name="T:NAnt.NUnit2.Tasks.NUnit2TestDomain">
            <summary>
            Custom TestDomain, similar to the one included with NUnit 2.0, in order 
            to workaround some limitations in it.
            </summary>
        </member>
        <member name="M:NAnt.NUnit2.Tasks.NUnit2TestDomain.RunTest(System.String,System.String,System.String,NUnit.Core.EventListener)">
            <summary>
            Runs a single testcase.
            </summary>
            <param name="testcase">The test to run, or null if running all tests.</param>
            <param name="assemblyFile"></param>
            <param name="configFilePath"></param>
            <param name="listener"></param>
            <returns>The result of the test.</returns>
        </member>
    </members>
</doc>
